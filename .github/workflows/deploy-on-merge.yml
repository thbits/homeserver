name: Deploy on merge

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: deploy-main
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: self-hosted
    env:
      DATADIR: ${{ vars.DATADIR }}
      CONFIGDIR: ${{ vars.CONFIGDIR }}
      DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
      LOCAL_IP: ${{ secrets.LOCAL_IP }}
      PUID: ${{ secrets.PUID }}
      PGID: ${{ secrets.PGID }}
      SSL_EMAIL: ${{ secrets.SSL_EMAIL }}
      CF_DNS_API_TOKEN: ${{ secrets.CF_DNS_API_TOKEN }}
      CF_DNS_ZONE_ID: ${{ secrets.CF_DNS_ZONE_ID }}
      TIMEZONE: ${{ vars.TIMEZONE }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      STORAGE_ENCRYPTION_KEY: ${{ secrets.STORAGE_ENCRYPTION_KEY }}
      SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      SONARR_API_KEY: ${{ secrets.SONARR_API_KEY }}
      RADARR_API_KEY: ${{ secrets.RADARR_API_KEY }}
      PROWLARR_API_KEY: ${{ secrets.PROWLARR_API_KEY }}
      BAZARR_API_KEY: ${{ secrets.BAZARR_API_KEY }}
      JELLYFIN_API_KEY: ${{ secrets.JELLYFIN_API_KEY }}
      JELLYSEER_API_KEY: ${{ secrets.JELLYSEER_API_KEY }}
      QBIT_USER: ${{ secrets.QBIT_USER }}
      QBIT_PASS: ${{ secrets.QBIT_PASS }}
      WIREGUARD_USERNAME: ${{ secrets.WIREGUARD_USERNAME }}
      WIREGUARD_PASSWORD: ${{ secrets.WIREGUARD_PASSWORD }}
      PIHOLE_API_KEY: ${{ secrets.PIHOLE_API_KEY }}
      CROWDSEC_BOUNCER_KEY: ${{ secrets.CROWDSEC_BOUNCER_KEY }}
      JOAL_SECRET_TOKEN: ${{ secrets.JOAL_SECRET_TOKEN }}
      JOAL_SECRET_OBFUSCATION_PATH: ${{ secrets.JOAL_SECRET_OBFUSCATION_PATH }}
      RESTIC_PASSWORD: ${{ secrets.RESTIC_PASSWORD }}
    steps:
      - uses: actions/checkout@v5

      - name: Find all docker-compose files
        id: find-compose
        run: |
          # Find traefik first, then others
          traefik=$(find . -name "docker-compose.yml" -path "*/traefik/*" -not -path "./.git/*" | xargs -I {} dirname {})
          others=$(find . -name "docker-compose.yml" -not -path "*/traefik/*" -not -path "./.git/*" | xargs -I {} dirname {} | sort)
          # Combine with traefik first
          dirs="$traefik"$'\n'"$others"
          echo "dirs<<EOF" >> $GITHUB_OUTPUT
          echo "$dirs" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Validate all docker-compose files
        run: |
          while IFS= read -r dir; do
            [ -z "$dir" ] && continue
            echo "Validating $dir/docker-compose.yml"
            (cd "$dir" && docker compose config -q)
          done <<< "${{ steps.find-compose.outputs.dirs }}"

      - name: Pull latest images
        run: |
          while IFS= read -r dir; do
            [ -z "$dir" ] && continue
            echo "Pulling images for $dir"
            (cd "$dir" && docker compose pull)
          done <<< "${{ steps.find-compose.outputs.dirs }}"

      - name: Deploy services
        run: |
          while IFS= read -r dir; do
            [ -z "$dir" ] && continue
            echo "Deploying services in $dir"
            (cd "$dir" && docker compose up -d --remove-orphans)
          done <<< "${{ steps.find-compose.outputs.dirs }}"

      - name: Cleanup old images
        run: docker image prune -f
