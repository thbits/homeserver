services:
  traefik:
    image: traefik:v3.5.3
    container_name: traefik
    restart: unless-stopped
    command:
      # dashboard (optional)
      # - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.mytlschallenge.acme.tlschallenge=true
      - --certificatesresolvers.mytlschallenge.acme.email=${SSL_EMAIL}
      - --certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json
      - --ping=true
      - --ping.entrypoint=traefikping
      - --entrypoints.traefikping.address=:8081
    ports:
      - "80:80"
      - "443:443"
      # - "8080:8080"  # dashboard if enabled
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:8081/ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DATADIR}/traefik/letsencrypt:/letsencrypt

  authelia:
    image: authelia/authelia:4.39.12
    container_name: authelia
    user: "1000:1000"
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
      - X_AUTHELIA_CONFIG_FILTERS=template
      - DOMAIN_NAME=${DOMAIN_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - STORAGE_ENCRYPTION_KEY=${STORAGE_ENCRYPTION_KEY}
    volumes:
      - ${DATADIR}/homeserver/authelia/config:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.authelia.rule=Host(`auth.${DOMAIN_NAME}`)
      - traefik.http.routers.authelia.entrypoints=websecure
      - traefik.http.routers.authelia.tls=true
      - traefik.http.routers.authelia.tls.certresolver=mytlschallenge
      - traefik.http.services.authelia.loadbalancer.server.port=9091
      # ForwardAuth middleware for reuse on apps:
      - traefik.http.middlewares.authelia-forwardauth.forwardauth.address=http://authelia:9091/api/authz/forward-auth
      - traefik.http.middlewares.authelia-forwardauth.forwardauth.trustForwardHeader=true
      - traefik.http.middlewares.authelia-forwardauth.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email

  n8n:
    image: docker.n8n.io/n8nio/n8n:1.114.4
    container_name: n8n
    restart: unless-stopped
    environment:
      - GENERIC_TIMEZONE=${TIMEZONE}
      - TZ=${TIMEZONE}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
      - USER_UID=1000
      - USER_GID=1000
      - N8N_HOST=n8n.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - N8N_PROXY_HOPS=1
      - WEBHOOK_URL=https://n8n.${DOMAIN_NAME}/
      - N8N_EDITOR_BASE_URL=https://n8n.${DOMAIN_NAME}/
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`n8n.${DOMAIN_NAME}`)
      - traefik.http.routers.n8n.entrypoints=websecure
      - traefik.http.routers.n8n.tls=true
      - traefik.http.routers.n8n.tls.certresolver=mytlschallenge
      - traefik.http.routers.n8n.middlewares=authelia-forwardauth@docker
    volumes:
      - ${DATADIR}/n8n_data:/home/node/.n8n
    depends_on:
      traefik:
        condition: service_healthy
