services:
  traefik:
    image: traefik:v3.5.3
    container_name: traefik
    restart: unless-stopped
    command:
      # dashboard (optional)
      # - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
        #- --certificatesresolvers.mytlschallenge.acme.tlschallenge=true
        #- --certificatesresolvers.mytlschallenge.acme.email=${SSL_EMAIL}
        #- --certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.myclouddns.acme.dnschallenge=true
      - --certificatesresolvers.myclouddns.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.myclouddns.acme.email=${SSL_EMAIL}
      - --certificatesresolvers.myclouddns.acme.storage=/letsencrypt/acme.json
      - --ping=true
      - --ping.entrypoint=traefikping
      - --entrypoints.traefikping.address=:8081
      # Staging cert, undo after successful cert issue
      - --certificatesresolvers.myclouddns.acme.caServer=https://acme-staging.api.letsencrypt.org/directory
    ports:
      - "80:80"
      - "443:443"
      # - "8080:8080"  # dashboard if enabled
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:8081/ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DATADIR}/traefik/letsencrypt:/letsencrypt
    networks:
      - traefik_external
      - internal

networks:
  traefik_external:
    name: traefik_external
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
  internal:
    name: internal
    driver: bridge
    internal: false
    ipam:
      config:
        - subnet: 172.20.1.0/24

