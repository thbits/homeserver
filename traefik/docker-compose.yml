services:
  traefik:
    image: traefik:v3.5.3
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      # - "8080:8080"  # dashboard if enabled
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      - CROWDSEC_BOUNCER_KEY=${CROWDSEC_BOUNCER_KEY}
      - TRAEFIK_CERTIFICATESRESOLVERS_MYCLOUDDNS_ACME_EMAIL=${SSL_EMAIL}
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:8081/ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    labels:
      # CrowdSec bouncer middleware
      - traefik.enable=true
      - traefik.http.middlewares.crowdsec-bouncer.plugin.bouncer.enabled=true
      - traefik.http.middlewares.crowdsec-bouncer.plugin.bouncer.CrowdsecLapiKey=${CROWDSEC_BOUNCER_KEY}
      - traefik.http.middlewares.crowdsec-bouncer.plugin.bouncer.CrowdsecLapiHost=crowdsec:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${CONFIGDIR}/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ${DATADIR}/traefik/letsencrypt:/letsencrypt
      - ${DATADIR}/traefik/logs:/logs
    networks:
      - traefik_external
      - internal

networks:
  traefik_external:
    name: traefik_external
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
  internal:
    name: internal
    driver: bridge
    internal: false
    ipam:
      config:
        - subnet: 172.20.1.0/24